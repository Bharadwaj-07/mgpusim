// Code generated by "esc -private -pkg=layers -o=bindata.go trans.hsaco gpu_gemm.hsaco relu.hsaco maxpooling.hsaco"; DO NOT EDIT.

package layers

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// _escFS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func _escFS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// _escDir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func _escDir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// _escFSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func _escFSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// _escFSMustByte is the same as _escFSByte, but panics if name is not present.
func _escFSMustByte(useLocal bool, name string) []byte {
	b, err := _escFSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// _escFSString is the string version of _escFSByte.
func _escFSString(useLocal bool, name string) (string, error) {
	b, err := _escFSByte(useLocal, name)
	return string(b), err
}

// _escFSMustString is the string version of _escFSMustByte.
func _escFSMustString(useLocal bool, name string) string {
	return string(_escFSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/gpu_gemm.hsaco": {
		name:    "gpu_gemm.hsaco",
		local:   "gpu_gemm.hsaco",
		size:    13800,
		modtime: 1592168288,
		compressed: `
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
/xcAAP//aVmkveg1AAA=
`,
	},

	"/maxpooling.hsaco": {
		name:    "maxpooling.hsaco",
		local:   "maxpooling.hsaco",
		size:    22544,
		modtime: 1593065774,
		compressed: `
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
`,
	},

	"/relu.hsaco": {
		name:    "relu.hsaco",
		local:   "relu.hsaco",
		size:    13904,
		modtime: 1592168288,
		compressed: `
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
/afZ/xoAAP//bciEz1A2AAA=
`,
	},

	"/trans.hsaco": {
		name:    "trans.hsaco",
		local:   "trans.hsaco",
		size:    9656,
		modtime: 1592168288,
		compressed: `
H4sIAAAAAAAC/+xaTXPbxBt/JCuO4+T/B0605YAIh7QdJCtynDi50Lw0SadJmjbQUphOZyOtbTV6G2kd
YgbSF2inM3SGl+FePgCHHjm1OfABmJ576IHO8AXgiBlJu7bkWn2BdgpUv5n4sZ6XfX7PWqvsrvbi0ZVF
nuOOAEUO7gMXfHk1umaGH0cjeTjUVaEAR2AEipAHACHm1yv3uKQsUD1H49Lw9khSMj5B3EDsulf+yiVl
PC7gCiLV90gXkpLF8U8Zx+o79YDowhPExfkFOPmA6Hl4egisP3noEo/JW0NJKcTiCjT/7OpC6M5+mzfC
+yHSCzDYqY3pZlcXltbfj3z3A8Aw1SNLr2u2hCw9+Gv4SJLqtZ2qUqbtykMAReorSVLxNPZ8w7FnRIaP
xPF3REU8VzyOPRub/kxRFCVxDVm46yOK4nsesn3X8XExuNpoWZuOGXMa69iPbOljoc8KsutNVO82c8LF
9vyKOJ+wdviEPFTxXGid9eohkQB9yByzix1eLRcn7GM100Hk8FjHY8P4JBld7ZhmTaNuz/Q1nUZmEx83
bJ2Zl0xnE5lzzVoNe0mvgALzWiyr3dZ13dtwkYZPNpE502mia9c0ZomwgGuoaZL0uk80yctZuNMkbpOc
MXTSSO8AwybptU+k1z6RXvtcK1Sll30sXvZfLGsZG/UG+RfX9YxutGVD17Ed3SsnajUfkw8eQXBy4vnn
P/uC83/4AvKvOfaj7ovqE47yjNULY7XaNImx5Bn6RsvWZr3632Y47+h43XPczr/kYKqAvPoGrlvYJhH5
qkKNS57TdKlp0djBemRn5nXP2EYEpzskG6flM6Jn0DaueQ5LKoqdYbDWtDaW1k/5na4qV7qW0wkLM6yi
nUUTkTOOtxWRDttUK5NFWZaL6fO/YM52IJd/aB7Mxf4O0OmmSK+PTg9/x8emily8wc7kCTJkyPAfBUfH
Pxeu7nI9D4E+/twP8PVQsNZLPozW42v3aIXeXZsKQr7dbrf/ifXzwO8Fa9LPIb8XPBtzueLePgjWp1/e
Hobvb1+EG3egDdcC9gUofDtSKFwWrsGlgUvcFY7P7wIv7AIs3+MB+AKACvDTzzzw4MKNOzxcvTsk8PB/
QVD5HK/m+OufwYVL10D84vYBuB7aYRAgxxX3wr4dENSbQn6Uh6/uXhF4CHIP8IVdQRBUYTBfBVgP83Bw
9S43ADDI53c5DtSbwI9CEAM85AHUXI6vBvkB3HvRw/3ynexOz5AhQ4YMGTJkyJAhQ4aXG+xd863hSFIB
+6hkK/l99D08W/Uzv9/+aDuBvE8VnXf6I/3zLc/Pi5qJ7Lq4Hb1lFccVWZEV8WBJRwSVLmB7y7B96WPH
2/JdpOGS5lhuk2DJczRL8rAplWWlhHcI9mxklhqaJhGHlExz25Jcz7mANVKKEkwoU5XJ8uTE1Pg0rpaR
qut6BW1iBdVqeEpRptSypuvVinpIPLiJfKyLji0G9MqyIo9PT0yXpakKRtMVVaItiYdgxbC3sDcjrqws
PA/ipqk/Oe3H7usEv+6nryX1g1T/S4/+9XAzZLB7ToHifyn7yiDbDsEg6y3bb1kg1+2m3EB+A+hnoCce
yATvkPAKWYYGsuZYFrYJyH7LImgTZL/hEy/6FkmYm1POj4efamwT+vzC2bXZ1WPzz3LfazC29512XqKz
hwUP9+NwLIyNHyaV2PjhYudC2Lh6BQB+b7cdFs/GD5NiD61CT/79tG2+d7yNJPPwPfyZfJOe4+B7xjeT
w33vpy7G4mdqIP0cTloDEo3NMUXK+ZiBnvpZmknapNKTxqXxq1z/9Ey+G++7GPbeiuRO7Dkn9Pn9luLc
Y6jSc1JnH9N/J1PivxlNdkda/J8BAAD//5VIJrK4JQAA
`,
	},
}

var _escDirs = map[string][]os.FileInfo{}
