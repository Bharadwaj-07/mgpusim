// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inst.proto

package instpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Stage int32

const (
	Stage_UNKNOWN     Stage = 0
	Stage_FetchStart  Stage = 1
	Stage_FetchDone   Stage = 2
	Stage_Issue       Stage = 3
	Stage_DecodeStart Stage = 4
	Stage_DecodeDone  Stage = 5
	Stage_ReadStart   Stage = 6
	Stage_ReadDone    Stage = 7
	Stage_ExecStart   Stage = 8
	Stage_ExecDone    Stage = 9
	Stage_WriteStart  Stage = 10
	Stage_WriteDone   Stage = 11
	Stage_WaitMem     Stage = 12
	Stage_MemReturn   Stage = 13
	Stage_Complete    Stage = 14
)

var Stage_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "FetchStart",
	2:  "FetchDone",
	3:  "Issue",
	4:  "DecodeStart",
	5:  "DecodeDone",
	6:  "ReadStart",
	7:  "ReadDone",
	8:  "ExecStart",
	9:  "ExecDone",
	10: "WriteStart",
	11: "WriteDone",
	12: "WaitMem",
	13: "MemReturn",
	14: "Complete",
}
var Stage_value = map[string]int32{
	"UNKNOWN":     0,
	"FetchStart":  1,
	"FetchDone":   2,
	"Issue":       3,
	"DecodeStart": 4,
	"DecodeDone":  5,
	"ReadStart":   6,
	"ReadDone":    7,
	"ExecStart":   8,
	"ExecDone":    9,
	"WriteStart":  10,
	"WriteDone":   11,
	"WaitMem":     12,
	"MemReturn":   13,
	"Complete":    14,
}

func (x Stage) String() string {
	return proto.EnumName(Stage_name, int32(x))
}
func (Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_inst_540b4cda7bcaee4e, []int{0}
}

type Event struct {
	Time                 float64  `protobuf:"fixed64,1,opt,name=time" json:"time,omitempty"`
	Stage                Stage    `protobuf:"varint,2,opt,name=stage,enum=instpb.Stage" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_inst_540b4cda7bcaee4e, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetStage() Stage {
	if m != nil {
		return m.Stage
	}
	return Stage_UNKNOWN
}

type Inst struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SimdId               uint32   `protobuf:"varint,2,opt,name=simd_id,json=simdId" json:"simd_id,omitempty"`
	WavefrontId          uint32   `protobuf:"varint,3,opt,name=wavefront_id,json=wavefrontId" json:"wavefront_id,omitempty"`
	WorkgroupId          uint32   `protobuf:"varint,4,opt,name=workgroup_id,json=workgroupId" json:"workgroup_id,omitempty"`
	Asm                  string   `protobuf:"bytes,5,opt,name=asm" json:"asm,omitempty"`
	Events               []*Event `protobuf:"bytes,6,rep,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inst) Reset()         { *m = Inst{} }
func (m *Inst) String() string { return proto.CompactTextString(m) }
func (*Inst) ProtoMessage()    {}
func (*Inst) Descriptor() ([]byte, []int) {
	return fileDescriptor_inst_540b4cda7bcaee4e, []int{1}
}
func (m *Inst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inst.Unmarshal(m, b)
}
func (m *Inst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inst.Marshal(b, m, deterministic)
}
func (dst *Inst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inst.Merge(dst, src)
}
func (m *Inst) XXX_Size() int {
	return xxx_messageInfo_Inst.Size(m)
}
func (m *Inst) XXX_DiscardUnknown() {
	xxx_messageInfo_Inst.DiscardUnknown(m)
}

var xxx_messageInfo_Inst proto.InternalMessageInfo

func (m *Inst) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Inst) GetSimdId() uint32 {
	if m != nil {
		return m.SimdId
	}
	return 0
}

func (m *Inst) GetWavefrontId() uint32 {
	if m != nil {
		return m.WavefrontId
	}
	return 0
}

func (m *Inst) GetWorkgroupId() uint32 {
	if m != nil {
		return m.WorkgroupId
	}
	return 0
}

func (m *Inst) GetAsm() string {
	if m != nil {
		return m.Asm
	}
	return ""
}

func (m *Inst) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "instpb.Event")
	proto.RegisterType((*Inst)(nil), "instpb.Inst")
	proto.RegisterEnum("instpb.Stage", Stage_name, Stage_value)
}

func init() { proto.RegisterFile("inst.proto", fileDescriptor_inst_540b4cda7bcaee4e) }

var fileDescriptor_inst_540b4cda7bcaee4e = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xcd, 0xdf, 0x36, 0x93, 0x26, 0x2e, 0x7b, 0x31, 0xc7, 0x5a, 0x11, 0x8a, 0x87, 0x1e,
	0xf4, 0x05, 0x04, 0x5b, 0x21, 0x48, 0x2b, 0xa4, 0x48, 0x8f, 0x92, 0x76, 0xc7, 0xba, 0x68, 0xb2,
	0x21, 0xbb, 0xad, 0x3e, 0x95, 0x0f, 0xe5, 0x93, 0xc8, 0x6c, 0xa2, 0xde, 0xe6, 0xfb, 0x7e, 0xdf,
	0x37, 0xd9, 0x21, 0x00, 0xb2, 0xd6, 0x66, 0xd6, 0xb4, 0xca, 0x28, 0x1e, 0xd2, 0xdc, 0x6c, 0x27,
	0xb7, 0x10, 0x2c, 0x8e, 0x58, 0x1b, 0xce, 0xc1, 0x37, 0xb2, 0xc2, 0xcc, 0x19, 0x3b, 0x53, 0xa7,
	0xb0, 0x33, 0xbf, 0x80, 0x40, 0x9b, 0x72, 0x8f, 0x99, 0x3b, 0x76, 0xa6, 0xe9, 0x75, 0x32, 0xeb,
	0x4a, 0xb3, 0x35, 0x99, 0x45, 0xc7, 0x26, 0x5f, 0x0e, 0xf8, 0x79, 0xad, 0x0d, 0x4f, 0xc1, 0x95,
	0xc2, 0xf6, 0xa3, 0xc2, 0x95, 0x82, 0x9f, 0xc1, 0x40, 0xcb, 0x4a, 0x3c, 0x4b, 0x61, 0xfb, 0x49,
	0x11, 0x92, 0xcc, 0x05, 0x3f, 0x87, 0xd1, 0x47, 0x79, 0xc4, 0x97, 0x56, 0xd5, 0x86, 0xa8, 0x67,
	0x69, 0xfc, 0xe7, 0xf5, 0x11, 0xd5, 0xbe, 0xed, 0x5b, 0x75, 0x68, 0x28, 0xe2, 0xf7, 0x91, 0x5f,
	0x2f, 0x17, 0x9c, 0x81, 0x57, 0xea, 0x2a, 0x0b, 0xec, 0xf7, 0x68, 0xe4, 0x97, 0x10, 0x22, 0xdd,
	0xa2, 0xb3, 0x70, 0xec, 0x4d, 0xe3, 0xff, 0xf7, 0xda, 0x0b, 0x8b, 0x1e, 0x5e, 0x7d, 0x3b, 0x10,
	0xd8, 0x0b, 0x78, 0x0c, 0x83, 0xa7, 0xd5, 0xc3, 0xea, 0x71, 0xb3, 0x62, 0x27, 0x3c, 0x05, 0xb8,
	0x47, 0xb3, 0x7b, 0x5d, 0x9b, 0xb2, 0x35, 0xcc, 0xe1, 0x09, 0x44, 0x56, 0xcf, 0x55, 0x8d, 0xcc,
	0xe5, 0x11, 0x04, 0xb9, 0xd6, 0x07, 0x64, 0x1e, 0x3f, 0x85, 0x78, 0x8e, 0x3b, 0x25, 0xb0, 0x8b,
	0xfa, 0x54, 0xed, 0x0c, 0x9b, 0x0d, 0xa8, 0x5a, 0x60, 0x29, 0x3a, 0x1c, 0xf2, 0x11, 0x0c, 0x49,
	0x5a, 0x38, 0x20, 0xb8, 0xf8, 0xc4, 0x5d, 0x07, 0x87, 0x04, 0x49, 0x5a, 0x18, 0xd1, 0xa6, 0x4d,
	0x2b, 0x4d, 0xbf, 0x19, 0x28, 0x6c, 0xb5, 0xc5, 0x31, 0x3d, 0x78, 0x53, 0x4a, 0xb3, 0xc4, 0x8a,
	0x8d, 0x88, 0x2d, 0xb1, 0x2a, 0xd0, 0x1c, 0xda, 0x9a, 0x25, 0xb4, 0xe8, 0x4e, 0x55, 0xcd, 0x3b,
	0x1a, 0x64, 0xe9, 0x36, 0xb4, 0xbf, 0xf9, 0xe6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x97, 0xbb,
	0xad, 0xf4, 0x01, 0x00, 0x00,
}
