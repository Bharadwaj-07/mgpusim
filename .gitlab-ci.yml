image: golang:latest

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

stages:
  - build
  - test
  - acceptance_test
  - deploy

before_script:

go_build:
  stage: build
  script:
    - go build ./...
  artifacts:
    paths:
      - .

unit_test:
  stage: test
  script:
    - go install github.com/onsi/ginkgo/ginkgo
    - ginkgo -r --randomizeAllSpecs --randomizeSuites --failOnPending --cover --trace --race --progress --skip="Stress"
    - go test -coverprofile=cover.out ./...
    - go tool cover -func=cover.out

cache_aceptance_test:
  stage: acceptance_test
  script:
    - cd timing/caches/l1v/acceptancetest
    - go build
    - ./acceptancetest

acceptance_test:
  stage: acceptance_test
  tags:
    - multi_core
  script:
    - apt-get update -qq && apt-get install -y -qq python3
    - python3 acceptance_test.py

build_docker_image_master:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  only:
    - master
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest_master ./docker/dev
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest_master

build_docker_image_release:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  only:
    - tags
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -tag $CI_REGISTRY_IMAGE:latest ./docker/dev
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
