
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
Encrypt:
	s_load_dword s9, s[4:5], 0x4                               // 000000001100: C0020242 00000004 
	s_load_dwordx2 s[4:5], s[6:7], 0x0                         // 000000001108: C0060103 00000000 
	s_load_dwordx2 s[0:1], s[6:7], 0x8                         // 000000001110: C0060003 00000008 
	s_load_dwordx2 s[2:3], s[6:7], 0x10                        // 000000001118: C0060083 00000010 
	s_load_dword s6, s[6:7], 0x18                              // 000000001120: C0020183 00000018 
	s_mov_b32 s12, 0xffff                                      // 000000001128: BE8C00FF 0000FFFF 
	s_waitcnt lgkmcnt(0)                                       // 000000001130: BF8C007F 
	s_and_b32 s7, s9, s12                                      // 000000001134: 86070C09 
	s_mul_i32 s8, s8, s7                                       // 000000001138: 92080708 
	v_add_u32_e32 v0, vcc, s8, v0                              // 00000000113C: 32000008 
	v_add_u32_e32 v0, vcc, s6, v0                              // 000000001140: 32000006 
	v_lshlrev_b32_e32 v0, 4, v0                                // 000000001144: 24000084 
	v_mov_b32_e32 v1, s5                                       // 000000001148: 7E020205 
	v_ashrrev_i32_e32 v2, 31, v0                               // 00000000114C: 2204009F 
	v_add_u32_e32 v0, vcc, s4, v0                              // 000000001150: 32000004 
	v_addc_u32_e32 v1, vcc, v1, v2, vcc                        // 000000001154: 38020501 
	flat_load_dwordx4 v[5:8], v[0:1]                           // 000000001158: DC5C0000 05000000 
	s_load_dwordx4 s[8:11], s[0:1], 0x0                        // 000000001160: C00A0200 00000000 
	s_movk_i32 s4, 0xff                                        // 000000001168: B00400FF 
	s_mov_b64 s[6:7], 0                                        // 00000000116C: BE860180 
	s_movk_i32 s5, 0x80                                        // 000000001170: B0050080 
	s_waitcnt lgkmcnt(0)                                       // 000000001174: BF8C007F 
	s_lshr_b32 s13, s8, 24                                     // 000000001178: 8F0D9808 
	s_lshr_b32 s14, s8, 16                                     // 00000000117C: 8F0E9008 
	s_lshr_b32 s15, s8, 8                                      // 000000001180: 8F0F8808 
	s_lshr_b32 s16, s9, 24                                     // 000000001184: 8F109809 
	s_lshr_b32 s17, s9, 16                                     // 000000001188: 8F119009 
	s_lshr_b32 s18, s9, 8                                      // 00000000118C: 8F128809 
	s_lshr_b32 s19, s10, 24                                    // 000000001190: 8F13980A 
	s_lshr_b32 s20, s10, 16                                    // 000000001194: 8F14900A 
	s_lshr_b32 s21, s10, 8                                     // 000000001198: 8F15880A 
	s_lshr_b32 s22, s11, 24                                    // 00000000119C: 8F16980B 
	s_lshr_b32 s23, s11, 16                                    // 0000000011A0: 8F17900B 
	s_lshr_b32 s24, s11, 8                                     // 0000000011A4: 8F18880B 
	v_mov_b32_e32 v18, s19                                     // 0000000011A8: 7E240213 
	v_mov_b32_e32 v2, s8                                       // 0000000011AC: 7E040208 
	v_mov_b32_e32 v3, s13                                      // 0000000011B0: 7E06020D 
	v_mov_b32_e32 v4, s14                                      // 0000000011B4: 7E08020E 
	v_mov_b32_e32 v12, s16                                     // 0000000011B8: 7E180210 
	v_mov_b32_e32 v13, s17                                     // 0000000011BC: 7E1A0211 
	v_mov_b32_e32 v9, s9                                       // 0000000011C0: 7E120209 
	v_mov_b32_e32 v11, s10                                     // 0000000011C4: 7E16020A 
	v_mov_b32_e32 v15, s11                                     // 0000000011C8: 7E1E020B 
	v_mov_b32_e32 v10, s15                                     // 0000000011CC: 7E14020F 
	v_mov_b32_e32 v17, s18                                     // 0000000011D0: 7E220212 
	v_mov_b32_e32 v22, s20                                     // 0000000011D4: 7E2C0214 
	v_mov_b32_e32 v23, s21                                     // 0000000011D8: 7E2E0215 
	v_mov_b32_e32 v24, s22                                     // 0000000011DC: 7E300216 
	v_mov_b32_e32 v25, s23                                     // 0000000011E0: 7E320217 
	v_mov_b32_e32 v26, s24                                     // 0000000011E4: 7E340218 
	s_waitcnt vmcnt(0)                                         // 0000000011E8: BF8C0F70 
	v_xor_b32_sdwa v21, v3, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000011EC: 2A2A0AF9 00060603 
	v_xor_b32_sdwa v20, v4, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_1// 0000000011F4: 2A280AF9 01060604 
	v_xor_b32_sdwa v4, v10, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_2// 0000000011FC: 2A080AF9 0206060A 
	v_xor_b32_sdwa v14, v2, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_3// 000000001204: 2A1C0AF9 03060602 
	v_xor_b32_sdwa v19, v12, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000120C: 2A260CF9 0006060C 
	v_xor_b32_sdwa v16, v13, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_1// 000000001214: 2A200CF9 0106060D 
	v_xor_b32_sdwa v13, v9, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_3// 00000000121C: 2A1A0CF9 03060609 
	v_xor_b32_sdwa v3, v17, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_2// 000000001224: 2A060CF9 02060611 
	v_xor_b32_sdwa v18, v18, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000122C: 2A240EF9 00060612 
	v_xor_b32_sdwa v6, v22, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_1// 000000001234: 2A0C0EF9 01060616 
	v_xor_b32_sdwa v10, v23, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_2// 00000000123C: 2A140EF9 02060617 
	v_xor_b32_sdwa v5, v11, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_3// 000000001244: 2A0A0EF9 0306060B 
	v_xor_b32_sdwa v12, v24, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000124C: 2A1810F9 00060618 
	v_xor_b32_sdwa v7, v25, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_1// 000000001254: 2A0E10F9 01060619 
	v_xor_b32_sdwa v9, v26, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_2// 00000000125C: 2A1210F9 0206061A 
	v_xor_b32_sdwa v8, v15, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_3// 000000001264: 2A1010F9 0306060F 
	v_mov_b32_e32 v2, s12                                      // 00000000126C: 7E04020C 
	s_branch BB0_2                                             // 000000001270: BF8200D7 

BB0_1:
	s_waitcnt vmcnt(5) lgkmcnt(5)                              // 000000001274: BF8C0575 
	v_and_b32_sdwa v7, v2, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001278: 260E24F9 00060602 
	v_and_b32_e32 v20, s5, v7                                  // 000000001280: 26280E05 
	v_lshlrev_b32_e32 v7, 1, v7                                // 000000001284: 240E0E81 
	v_xor_b32_e32 v21, 27, v7                                  // 000000001288: 2A2A0E9B 
	v_cmp_eq_u32_e32 vcc, 0, v20                               // 00000000128C: 7D942880 
	s_waitcnt vmcnt(2) lgkmcnt(2)                              // 000000001290: BF8C0272 
	v_and_b32_sdwa v22, v2, v15 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001294: 262C1EF9 00060602 
	v_cndmask_b32_e32 v7, v21, v7, vcc                         // 00000000129C: 000E0F15 
	v_and_b32_e32 v20, s5, v22                                 // 0000000012A0: 26282C05 
	v_lshlrev_b32_e32 v21, 1, v22                              // 0000000012A4: 242A2C81 
	v_xor_b32_e32 v22, 27, v21                                 // 0000000012A8: 2A2C2A9B 
	v_cmp_eq_u32_e32 vcc, 0, v20                               // 0000000012AC: 7D942880 
	v_cndmask_b32_e32 v20, v22, v21, vcc                       // 0000000012B0: 00282B16 
	v_and_b32_sdwa v21, v2, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000012B4: 262A20F9 00060602 
	v_and_b32_e32 v22, s5, v21                                 // 0000000012BC: 262C2A05 
	v_lshlrev_b32_e32 v21, 1, v21                              // 0000000012C0: 242A2A81 
	v_cmp_eq_u32_e32 vcc, 0, v22                               // 0000000012C4: 7D942C80 
	v_xor_b32_e32 v23, 27, v21                                 // 0000000012C8: 2A2E2A9B 
	v_and_b32_sdwa v22, v2, v10 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000012CC: 262C14F9 00060602 
	v_cndmask_b32_e32 v21, v23, v21, vcc                       // 0000000012D4: 002A2B17 
	v_and_b32_e32 v23, s5, v22                                 // 0000000012D8: 262E2C05 
	v_lshlrev_b32_e32 v22, 1, v22                              // 0000000012DC: 242C2C81 
	v_xor_b32_e32 v24, 27, v22                                 // 0000000012E0: 2A302C9B 
	v_cmp_eq_u32_e32 vcc, 0, v23                               // 0000000012E4: 7D942E80 
	v_xor_b32_e32 v27, v18, v21                                // 0000000012E8: 2A362B12 
	v_cndmask_b32_e32 v26, v24, v22, vcc                       // 0000000012EC: 00342D18 
	v_xor_b32_e32 v21, v10, v16                                // 0000000012F0: 2A2A210A 
	v_xor_b32_e32 v22, v21, v20                                // 0000000012F4: 2A2C2915 
	v_xor_b32_e32 v20, v27, v20                                // 0000000012F8: 2A28291B 
	v_xor_b32_e32 v7, v15, v7                                  // 0000000012FC: 2A0E0F0F 
	v_xor_b32_e32 v18, v18, v26                                // 000000001300: 2A243512 
	v_xor_b32_e32 v20, v20, v21                                // 000000001304: 2A282B14 
	v_xor_b32_e32 v21, v22, v7                                 // 000000001308: 2A2A0F16 
	v_xor_b32_e32 v7, v18, v7                                  // 00000000130C: 2A0E0F12 
	v_xor_b32_e32 v7, v7, v16                                  // 000000001310: 2A0E2107 
	v_and_b32_sdwa v16, v2, v19 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001314: 262026F9 00060602 
	v_and_b32_e32 v18, s5, v16                                 // 00000000131C: 26242005 
	v_lshlrev_b32_e32 v16, 1, v16                              // 000000001320: 24202081 
	v_cmp_eq_u32_e32 vcc, 0, v18                               // 000000001324: 7D942480 
	v_xor_b32_e32 v22, 27, v16                                 // 000000001328: 2A2C209B 
	s_waitcnt vmcnt(1) lgkmcnt(1)                              // 00000000132C: BF8C0171 
	v_and_b32_sdwa v18, v2, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001330: 26240CF9 00060602 
	v_cndmask_b32_e32 v16, v22, v16, vcc                       // 000000001338: 00202116 
	v_and_b32_e32 v22, s5, v18                                 // 00000000133C: 262C2405 
	v_lshlrev_b32_e32 v18, 1, v18                              // 000000001340: 24242481 
	v_cmp_eq_u32_e32 vcc, 0, v22                               // 000000001344: 7D942C80 
	v_xor_b32_e32 v23, 27, v18                                 // 000000001348: 2A2E249B 
	v_and_b32_sdwa v22, v2, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000134C: 262C1CF9 00060602 
	v_cndmask_b32_e32 v18, v23, v18, vcc                       // 000000001354: 00242517 
	v_and_b32_e32 v23, s5, v22                                 // 000000001358: 262E2C05 
	v_lshlrev_b32_e32 v22, 1, v22                              // 00000000135C: 242C2C81 
	v_xor_b32_e32 v24, 27, v22                                 // 000000001360: 2A302C9B 
	v_cmp_eq_u32_e32 vcc, 0, v23                               // 000000001364: 7D942E80 
	v_cndmask_b32_e32 v28, v24, v22, vcc                       // 000000001368: 00382D18 
	v_and_b32_sdwa v22, v2, v11 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000136C: 262C16F9 00060602 
	v_and_b32_e32 v23, s5, v22                                 // 000000001374: 262E2C05 
	v_lshlrev_b32_e32 v22, 1, v22                              // 000000001378: 242C2C81 
	v_cmp_eq_u32_e32 vcc, 0, v23                               // 00000000137C: 7D942E80 
	v_xor_b32_e32 v24, 27, v22                                 // 000000001380: 2A302C9B 
	v_xor_b32_e32 v23, v6, v16                                 // 000000001384: 2A2E2106 
	v_cndmask_b32_e32 v22, v24, v22, vcc                       // 000000001388: 002C2D18 
	v_xor_b32_e32 v24, v14, v11                                // 00000000138C: 2A30170E 
	v_xor_b32_e32 v23, v23, v18                                // 000000001390: 2A2E2517 
	v_xor_b32_e32 v18, v24, v18                                // 000000001394: 2A242518 
	v_xor_b32_e32 v18, v18, v19                                // 000000001398: 2A242712 
	v_xor_b32_e32 v19, v19, v22                                // 00000000139C: 2A262D13 
	v_xor_b32_e32 v30, v6, v19                                 // 0000000013A0: 2A3C2706 
	v_xor_b32_e32 v6, v30, v16                                 // 0000000013A4: 2A0C211E 
	v_xor_b32_e32 v31, v6, v14                                 // 0000000013A8: 2A3E1D06 
	v_and_b32_sdwa v6, v2, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000013AC: 260C18F9 00060602 
	v_and_b32_e32 v14, s5, v6                                  // 0000000013B4: 261C0C05 
	v_lshlrev_b32_e32 v6, 1, v6                                // 0000000013B8: 240C0C81 
	v_cmp_eq_u32_e32 vcc, 0, v14                               // 0000000013BC: 7D941C80 
	v_xor_b32_e32 v16, 27, v6                                  // 0000000013C0: 2A200C9B 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000013C4: BF8C0070 
	v_and_b32_sdwa v14, v2, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000013C8: 261C22F9 00060602 
	v_cndmask_b32_e32 v6, v16, v6, vcc                         // 0000000013D0: 000C0D10 
	v_and_b32_e32 v16, s5, v14                                 // 0000000013D4: 26201C05 
	v_lshlrev_b32_e32 v14, 1, v14                              // 0000000013D8: 241C1C81 
	v_cmp_eq_u32_e32 vcc, 0, v16                               // 0000000013DC: 7D942080 
	v_xor_b32_e32 v19, 27, v14                                 // 0000000013E0: 2A261C9B 
	v_and_b32_sdwa v16, v2, v13 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000013E4: 26201AF9 00060602 
	v_cndmask_b32_e32 v14, v19, v14, vcc                       // 0000000013EC: 001C1D13 
	v_and_b32_e32 v19, s5, v16                                 // 0000000013F0: 26262005 
	v_lshlrev_b32_e32 v16, 1, v16                              // 0000000013F4: 24202081 
	v_cmp_eq_u32_e32 vcc, 0, v19                               // 0000000013F8: 7D942680 
	v_xor_b32_e32 v22, 27, v16                                 // 0000000013FC: 2A2C209B 
	v_and_b32_sdwa v19, v2, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001400: 262608F9 00060602 
	v_cndmask_b32_e32 v16, v22, v16, vcc                       // 000000001408: 00202116 
	v_and_b32_e32 v22, s5, v19                                 // 00000000140C: 262C2605 
	v_lshlrev_b32_e32 v19, 1, v19                              // 000000001410: 24262681 
	v_xor_b32_e32 v29, v23, v24                                // 000000001414: 2A3A3117 
	v_xor_b32_e32 v23, 27, v19                                 // 000000001418: 2A2E269B 
	v_cmp_eq_u32_e32 vcc, 0, v22                               // 00000000141C: 7D942C80 
	v_cndmask_b32_e32 v32, v23, v19, vcc                       // 000000001420: 00402717 
	v_xor_b32_e32 v6, v17, v6                                  // 000000001424: 2A0C0D11 
	v_xor_b32_e32 v19, v4, v13                                 // 000000001428: 2A261B04 
	v_xor_b32_e32 v22, v6, v19                                 // 00000000142C: 2A2C2706 
	v_xor_b32_e32 v6, v6, v13                                  // 000000001430: 2A0C1B06 
	v_xor_b32_e32 v6, v6, v12                                  // 000000001434: 2A0C1906 
	v_xor_b32_e32 v34, v12, v16                                // 000000001438: 2A44210C 
	v_and_b32_sdwa v12, v2, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000143C: 261810F9 00060602 
	v_and_b32_e32 v13, s5, v12                                 // 000000001444: 261A1805 
	v_lshlrev_b32_e32 v12, 1, v12                              // 000000001448: 24181881 
	v_cmp_eq_u32_e32 vcc, 0, v13                               // 00000000144C: 7D941A80 
	v_xor_b32_e32 v16, 27, v12                                 // 000000001450: 2A20189B 
	v_and_b32_sdwa v13, v2, v9 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001454: 261A12F9 00060602 
	v_cndmask_b32_e32 v12, v16, v12, vcc                       // 00000000145C: 00181910 
	v_and_b32_e32 v16, s5, v13                                 // 000000001460: 26201A05 
	v_lshlrev_b32_e32 v13, 1, v13                              // 000000001464: 241A1A81 
	v_xor_b32_e32 v33, v22, v14                                // 000000001468: 2A421D16 
	v_xor_b32_e32 v14, v19, v14                                // 00000000146C: 2A1C1D13 
	v_cmp_eq_u32_e32 vcc, 0, v16                               // 000000001470: 7D942080 
	v_xor_b32_e32 v19, 27, v13                                 // 000000001474: 2A261A9B 
	v_and_b32_sdwa v16, v2, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001478: 26200AF9 00060602 
	v_cndmask_b32_e32 v13, v19, v13, vcc                       // 000000001480: 001A1B13 
	v_and_b32_e32 v19, s5, v16                                 // 000000001484: 26262005 
	v_lshlrev_b32_e32 v16, 1, v16                              // 000000001488: 24202081 
	v_cmp_eq_u32_e32 vcc, 0, v19                               // 00000000148C: 7D942680 
	v_xor_b32_e32 v22, 27, v16                                 // 000000001490: 2A2C209B 
	v_and_b32_sdwa v19, v2, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001494: 262606F9 00060602 
	v_cndmask_b32_e32 v16, v22, v16, vcc                       // 00000000149C: 00202116 
	v_and_b32_e32 v22, s5, v19                                 // 0000000014A0: 262C2605 
	v_lshlrev_b32_e32 v19, 1, v19                              // 0000000014A4: 24262681 
	s_add_u32 s8, s0, s6                                       // 0000000014A8: 80080600 
	v_xor_b32_e32 v36, v8, v16                                 // 0000000014AC: 2A482108 
	v_xor_b32_e32 v23, 27, v19                                 // 0000000014B0: 2A2E269B 
	v_cmp_eq_u32_e32 vcc, 0, v22                               // 0000000014B4: 7D942C80 
	v_xor_b32_e32 v8, v8, v9                                   // 0000000014B8: 2A101308 
	s_addc_u32 s9, s1, s7                                      // 0000000014BC: 82090701 
	v_xor_b32_e32 v13, v5, v13                                 // 0000000014C0: 2A1A1B05 
	v_xor_b32_e32 v5, v8, v5                                   // 0000000014C4: 2A0A0B08 
	v_cndmask_b32_e32 v35, v23, v19, vcc                       // 0000000014C8: 00462717 
	s_add_u32 s8, s8, 16                                       // 0000000014CC: 80089008 
	v_xor_b32_e32 v5, v5, v35                                  // 0000000014D0: 2A0A4705 
	s_addc_u32 s9, s9, 0                                       // 0000000014D4: 82098009 
	v_xor_b32_e32 v38, v6, v32                                 // 0000000014D8: 2A4C4106 
	v_xor_b32_e32 v6, v13, v3                                  // 0000000014DC: 2A0C070D 
	v_xor_b32_e32 v39, v5, v12                                 // 0000000014E0: 2A4E1905 
	v_xor_b32_e32 v5, v9, v12                                  // 0000000014E4: 2A0A1909 
	v_xor_b32_e32 v12, v5, v6                                  // 0000000014E8: 2A180D05 
	v_xor_b32_e32 v40, v36, v6                                 // 0000000014EC: 2A500D24 
	v_mov_b32_e32 v5, s8                                       // 0000000014F0: 7E0A0208 
	v_mov_b32_e32 v6, s9                                       // 0000000014F4: 7E0C0209 
	flat_load_dwordx4 v[22:25], v[5:6]                         // 0000000014F8: DC5C0000 16000005 
	v_xor_b32_e32 v15, v27, v15                                // 000000001500: 2A1E1F1B 
	v_xor_b32_e32 v10, v15, v10                                // 000000001504: 2A14150F 
	v_xor_b32_e32 v15, v17, v32                                // 000000001508: 2A1E4111 
	v_xor_b32_e32 v4, v15, v4                                  // 00000000150C: 2A08090F 
	v_xor_b32_e32 v15, v4, v34                                 // 000000001510: 2A1E4504 
	v_xor_b32_e32 v4, v36, v9                                  // 000000001514: 2A081324 
	v_xor_b32_e32 v8, v18, v28                                 // 000000001518: 2A103912 
	v_xor_b32_e32 v37, v14, v34                                // 00000000151C: 2A4A450E 
	v_xor_b32_e32 v11, v30, v11                                // 000000001520: 2A16171E 
	v_xor_b32_e32 v3, v4, v3                                   // 000000001524: 2A060704 
	s_add_u32 s6, s6, 16                                       // 000000001528: 80069006 
	v_xor_b32_e32 v10, v10, v26                                // 00000000152C: 2A14350A 
	v_xor_b32_e32 v11, v11, v28                                // 000000001530: 2A16390B 
	v_xor_b32_e32 v9, v3, v35                                  // 000000001534: 2A124703 
	s_addc_u32 s7, s7, 0                                       // 000000001538: 82078007 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000153C: BF8C0070 
	v_xor_b32_sdwa v14, v22, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001540: 2A1C0EF9 00060616 
	v_xor_b32_sdwa v16, v23, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:BYTE_0// 000000001548: 2A2010F9 00050617 
	v_xor_b32_sdwa v21, v22, v21 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:BYTE_0// 000000001550: 2A2A2AF9 00030616 
	v_xor_b32_sdwa v20, v22, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:BYTE_0// 000000001558: 2A2828F9 00050616 
	v_lshrrev_b32_e32 v22, 8, v22                              // 000000001560: 202C2C88 
	v_xor_b32_sdwa v19, v23, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:BYTE_0// 000000001564: 2A263AF9 00030617 
	v_xor_b32_sdwa v13, v23, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 00000000156C: 2A1A3EF9 00060617 
	v_lshrrev_b32_e32 v23, 8, v23                              // 000000001574: 202E2E88 
	v_xor_b32_sdwa v18, v24, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:BYTE_0// 000000001578: 2A2442F9 00030618 
	v_xor_b32_sdwa v6, v24, v37 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:BYTE_0// 000000001580: 2A0C4AF9 00050618 
	v_xor_b32_sdwa v5, v24, v38 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 000000001588: 2A0A4CF9 00060618 
	v_xor_b32_sdwa v12, v25, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:BYTE_0// 000000001590: 2A1818F9 00030619 
	v_xor_b32_sdwa v7, v25, v40 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:BYTE_0// 000000001598: 2A0E50F9 00050619 
	v_xor_b32_sdwa v8, v25, v39 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000015A0: 2A104EF9 00060619 
	v_lshrrev_b32_e32 v25, 8, v25                              // 0000000015A8: 20323288 
	v_lshrrev_b32_e32 v24, 8, v24                              // 0000000015AC: 20303088 
	v_xor_b32_sdwa v4, v22, v10 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000015B0: 2A0814F9 00060616 
	v_xor_b32_sdwa v3, v23, v11 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000015B8: 2A0616F9 00060617 
	v_xor_b32_sdwa v10, v24, v15 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000015C0: 2A141EF9 00060618 
	v_xor_b32_sdwa v9, v25, v9 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0// 0000000015C8: 2A1212F9 00060619 

BB0_2:
	v_and_b32_e32 v11, s4, v21                                 // 0000000015D0: 26162A04 
	v_add_u32_e32 v21, vcc, s2, v11                            // 0000000015D4: 322A1602 
	v_mov_b32_e32 v15, s3                                      // 0000000015D8: 7E1E0203 
	v_addc_u32_e32 v22, vcc, 0, v15, vcc                       // 0000000015DC: 382C1E80 
	v_and_b32_e32 v11, s4, v20                                 // 0000000015E0: 26162804 
	v_add_u32_e32 v23, vcc, s2, v11                            // 0000000015E4: 322E1602 
	v_addc_u32_e32 v24, vcc, 0, v15, vcc                       // 0000000015E8: 38301E80 
	v_and_b32_e32 v4, s4, v4                                   // 0000000015EC: 26080804 
	v_add_u32_e32 v25, vcc, s2, v4                             // 0000000015F0: 32320802 
	v_mov_b32_e32 v11, s3                                      // 0000000015F4: 7E160203 
	v_addc_u32_e32 v26, vcc, 0, v11, vcc                       // 0000000015F8: 38341680 
	v_and_b32_e32 v4, s4, v19                                  // 0000000015FC: 26082604 
	v_add_u32_e32 v19, vcc, s2, v4                             // 000000001600: 32260802 
	v_addc_u32_e32 v20, vcc, 0, v11, vcc                       // 000000001604: 38281680 
	v_and_b32_e32 v3, s4, v3                                   // 000000001608: 26060604 
	v_add_u32_e32 v27, vcc, s2, v3                             // 00000000160C: 32360602 
	v_mov_b32_e32 v4, s3                                       // 000000001610: 7E080203 
	v_addc_u32_e32 v28, vcc, 0, v4, vcc                        // 000000001614: 38380880 
	v_and_b32_e32 v3, s4, v13                                  // 000000001618: 26061A04 
	v_add_u32_e32 v29, vcc, s2, v3                             // 00000000161C: 323A0602 
	v_addc_u32_e32 v30, vcc, 0, v4, vcc                        // 000000001620: 383C0880 
	v_and_b32_e32 v3, s4, v5                                   // 000000001624: 26060A04 
	v_add_u32_e32 v3, vcc, s2, v3                              // 000000001628: 32060602 
	v_addc_u32_e32 v4, vcc, 0, v4, vcc                         // 00000000162C: 38080880 
	v_and_b32_e32 v11, s4, v14                                 // 000000001630: 26161C04 
	flat_load_ubyte v3, v[3:4]                                 // 000000001634: DC400000 03000003 
	flat_load_ubyte v5, v[27:28]                               // 00000000163C: DC400000 0500001B 
	flat_load_ubyte v19, v[19:20]                              // 000000001644: DC400000 13000013 
	flat_load_ubyte v4, v[29:30]                               // 00000000164C: DC400000 0400001D 
	flat_load_ubyte v13, v[25:26]                              // 000000001654: DC400000 0D000019 
	v_add_u32_e32 v25, vcc, s2, v11                            // 00000000165C: 32321602 
	v_mov_b32_e32 v14, s3                                      // 000000001660: 7E1C0203 
	v_addc_u32_e32 v26, vcc, 0, v14, vcc                       // 000000001664: 38341C80 
	v_and_b32_e32 v11, s4, v16                                 // 000000001668: 26162004 
	v_add_u32_e32 v27, vcc, s2, v11                            // 00000000166C: 32361602 
	v_addc_u32_e32 v28, vcc, 0, v14, vcc                       // 000000001670: 38381C80 
	v_and_b32_e32 v11, s4, v18                                 // 000000001674: 26162404 
	v_add_u32_e32 v17, vcc, s2, v11                            // 000000001678: 32221602 
	v_addc_u32_e32 v18, vcc, 0, v14, vcc                       // 00000000167C: 38241C80 
	v_and_b32_e32 v10, s4, v10                                 // 000000001680: 26141404 
	v_add_u32_e32 v15, vcc, s2, v10                            // 000000001684: 321E1402 
	v_mov_b32_e32 v11, s3                                      // 000000001688: 7E160203 
	v_and_b32_e32 v10, s4, v12                                 // 00000000168C: 26141804 
	v_addc_u32_e32 v16, vcc, 0, v11, vcc                       // 000000001690: 38201680 
	v_add_u32_e32 v10, vcc, s2, v10                            // 000000001694: 32141402 
	v_addc_u32_e32 v11, vcc, 0, v11, vcc                       // 000000001698: 38161680 
	v_and_b32_e32 v9, s4, v9                                   // 00000000169C: 26121204 
	v_add_u32_e32 v29, vcc, s2, v9                             // 0000000016A0: 323A1202 
	v_mov_b32_e32 v12, s3                                      // 0000000016A4: 7E180203 
	v_addc_u32_e32 v30, vcc, 0, v12, vcc                       // 0000000016A8: 383C1880 
	v_and_b32_e32 v8, s4, v8                                   // 0000000016AC: 26101004 
	v_add_u32_e32 v31, vcc, s2, v8                             // 0000000016B0: 323E1002 
	v_mov_b32_e32 v9, s3                                       // 0000000016B4: 7E120203 
	v_addc_u32_e32 v32, vcc, 0, v9, vcc                        // 0000000016B8: 38401280 
	v_and_b32_e32 v6, s4, v6                                   // 0000000016BC: 260C0C04 
	flat_load_ubyte v14, v[29:30]                              // 0000000016C0: DC400000 0E00001D 
	flat_load_ubyte v8, v[10:11]                               // 0000000016C8: DC400000 0800000A 
	flat_load_ubyte v10, v[31:32]                              // 0000000016D0: DC400000 0A00001F 
	flat_load_ubyte v16, v[15:16]                              // 0000000016D8: DC400000 1000000F 
	flat_load_ubyte v12, v[17:18]                              // 0000000016E0: DC400000 0C000011 
	v_add_u32_e32 v29, vcc, s2, v6                             // 0000000016E8: 323A0C02 
	v_addc_u32_e32 v30, vcc, 0, v9, vcc                        // 0000000016EC: 383C1280 
	v_and_b32_e32 v7, s4, v7                                   // 0000000016F0: 260E0E04 
	v_mov_b32_e32 v17, s3                                      // 0000000016F4: 7E220203 
	v_add_u32_e32 v20, vcc, s2, v7                             // 0000000016F8: 32280E02 
	flat_load_ubyte v18, v[21:22]                              // 0000000016FC: DC400000 12000015 
	flat_load_ubyte v11, v[25:26]                              // 000000001704: DC400000 0B000019 
	flat_load_ubyte v9, v[23:24]                               // 00000000170C: DC400000 09000017 
	flat_load_ubyte v15, v[27:28]                              // 000000001714: DC400000 0F00001B 
	flat_load_ubyte v6, v[29:30]                               // 00000000171C: DC400000 0600001D 
	v_addc_u32_e32 v21, vcc, 0, v17, vcc                       // 000000001724: 382A2280 
	flat_load_ubyte v17, v[20:21]                              // 000000001728: DC400000 11000014 
	s_cmpk_lg_i32 s6, 0xd0                                     // 000000001730: B18600D0 
	s_cbranch_scc1 BB0_1                                       // 000000001734: BF85FECF 
	s_add_u32 s0, s0, 0xe0                                     // 000000001738: 8000FF00 000000E0 
	s_addc_u32 s1, s1, 0                                       // 000000001740: 82018001 
	v_mov_b32_e32 v21, s1                                      // 000000001744: 7E2A0201 
	v_mov_b32_e32 v20, s0                                      // 000000001748: 7E280200 
	flat_load_dwordx4 v[20:23], v[20:21]                       // 00000000174C: DC5C0000 14000014 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000001754: BF8C0070 
	v_xor_b32_sdwa v2, v20, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:DWORD// 000000001758: 2A0424F9 06030614 
	v_xor_b32_sdwa v7, v20, v15 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD// 000000001760: 2A0E1EF9 06050114 
	v_xor_b32_sdwa v15, v21, v19 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:DWORD// 000000001768: 2A1E26F9 06030615 
	v_xor_b32_sdwa v6, v21, v6 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD// 000000001770: 2A0C0CF9 06050115 
	v_xor_b32_sdwa v10, v20, v10 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD// 000000001778: 2A1414F9 06060114 
	v_lshrrev_b32_e32 v18, 8, v20                              // 000000001780: 20242888 
	v_lshrrev_b32_e32 v20, 8, v22                              // 000000001784: 20282C88 
	v_xor_b32_sdwa v11, v21, v11 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD// 000000001788: 2A1616F9 06060115 
	v_lshrrev_b32_e32 v19, 8, v21                              // 000000001790: 20262A88 
	v_lshrrev_b32_e32 v21, 8, v23                              // 000000001794: 202A2E88 
	v_xor_b32_sdwa v8, v23, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:DWORD// 000000001798: 2A1010F9 06030617 
	v_xor_b32_sdwa v9, v23, v9 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD// 0000000017A0: 2A1212F9 06050117 
	v_or_b32_sdwa v2, v2, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 0000000017A8: 28040EF9 06000602 
	v_or_b32_sdwa v7, v8, v9 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 0000000017B0: 280E12F9 06000608 
	v_xor_b32_e32 v8, v18, v16                                 // 0000000017B8: 2A102112 
	v_xor_b32_e32 v9, v19, v14                                 // 0000000017BC: 2A121D13 
	v_xor_b32_sdwa v12, v22, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:DWORD// 0000000017C0: 2A1818F9 06030616 
	v_xor_b32_sdwa v17, v22, v17 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD// 0000000017C8: 2A2222F9 06050116 
	v_xor_b32_sdwa v4, v22, v4 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD// 0000000017D0: 2A0808F9 06060116 
	v_xor_b32_e32 v13, v20, v13                                // 0000000017D8: 2A1A1B14 
	v_xor_b32_sdwa v3, v23, v3 dst_sel:BYTE_1 dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:DWORD// 0000000017DC: 2A0606F9 06060117 
	v_xor_b32_e32 v5, v21, v5                                  // 0000000017E4: 2A0A0B15 
	v_or_b32_sdwa v3, v5, v3 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 0000000017E8: 280606F9 06000505 
	v_or_b32_sdwa v8, v8, v10 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 0000000017F0: 281014F9 06000508 
	v_or_b32_sdwa v6, v15, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 0000000017F8: 280C0CF9 0600060F 
	v_or_b32_sdwa v12, v12, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 000000001800: 281822F9 0600060C 
	v_or_b32_sdwa v4, v13, v4 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 000000001808: 280808F9 0600050D 
	v_or_b32_sdwa v9, v9, v11 dst_sel:WORD_1 dst_unused:UNUSED_PAD src0_sel:BYTE_0 src1_sel:DWORD// 000000001810: 281216F9 06000509 
	v_or_b32_sdwa v5, v7, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD// 000000001818: 280A06F9 06040607 
	v_or_b32_sdwa v4, v12, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD// 000000001820: 280808F9 0604060C 
	v_or_b32_sdwa v3, v6, v9 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD// 000000001828: 280612F9 06040606 
	v_or_b32_sdwa v2, v2, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD// 000000001830: 280410F9 06040602 
	flat_store_dwordx4 v[0:1], v[2:5]                          // 000000001838: DC7C0000 00000200 
	s_endpgm                                                   // 000000001840: BF810000 
