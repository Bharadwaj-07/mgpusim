
kernels.hsaco:	file format ELF64-amdgpu

Disassembly of section .text:
0000000000002100 MaxPoolForward:
	s_load_dword s0, s[4:5], 0x4                               // 000000002100: C0020002 00000004 
	s_load_dword s9, s[6:7], 0x0                               // 000000002108: C0020243 00000000 
	s_load_dword s1, s[6:7], 0x48                              // 000000002110: C0020043 00000048 
	s_waitcnt lgkmcnt(0)                                       // 000000002118: BF8C007F 
	s_and_b32 s0, s0, 0xffff                                   // 00000000211C: 8600FF00 0000FFFF 
	s_mul_i32 s8, s8, s0                                       // 000000002124: 92080008 
	v_add_u32_e32 v0, vcc, s8, v0                              // 000000002128: 32000008 
	v_add_u32_e32 v0, vcc, s1, v0                              // 00000000212C: 32000001 
	v_cmp_gt_i32_e32 vcc, s9, v0                               // 000000002130: 7D880009 
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002134: BE80206A 
	s_cbranch_execz BB0_11                                     // 000000002138: BF8800C3 

000000000000213c BB0_1:
	s_load_dwordx2 s[10:11], s[6:7], 0x38                      // 00000000213C: C0060283 00000038 
	s_load_dwordx2 s[12:13], s[6:7], 0x40                      // 000000002144: C0060303 00000040 
	s_load_dword s4, s[4:5], 0xc                               // 00000000214C: C0020102 0000000C 
	s_load_dwordx2 s[28:29], s[6:7], 0x8                       // 000000002154: C0060703 00000008 
	s_load_dwordx8 s[16:23], s[6:7], 0x18                      // 00000000215C: C00E0403 00000018 
	s_mov_b32 s0, 0x4f800000                                   // 000000002164: BE8000FF 4F800000 
	s_waitcnt lgkmcnt(0)                                       // 00000000216C: BF8C007F 
	s_add_i32 s24, s11, -1                                     // 000000002170: 8118C10B 
	s_sub_i32 s5, 0, s11                                       // 000000002174: 81850B80 
	s_mov_b64 s[26:27], 0                                      // 000000002178: BE9A0180 
	s_ashr_i32 s6, s19, 31                                     // 00000000217C: 90069F13 
	s_add_i32 s1, s19, s6                                      // 000000002180: 81010613 
	s_xor_b32 s7, s1, s6                                       // 000000002184: 88070601 
	v_cvt_f32_u32_e32 v1, s7                                   // 000000002188: 7E020C07 
	s_ashr_i32 s8, s18, 31                                     // 00000000218C: 90089F12 
	s_add_i32 s1, s18, s8                                      // 000000002190: 81010812 
	s_xor_b32 s14, s1, s8                                      // 000000002194: 880E0801 
	v_rcp_iflag_f32_e32 v1, v1                                 // 000000002198: 7E024701 
	v_cvt_f32_u32_e32 v2, s14                                  // 00000000219C: 7E040C0E 
	s_mul_i32 s15, s17, s16                                    // 0000000021A0: 920F1011 
	s_sub_i32 s24, s24, s21                                    // 0000000021A4: 81981518 
	v_mul_f32_e32 v1, s0, v1                                   // 0000000021A8: 0A020200 
	v_cvt_u32_f32_e32 v1, v1                                   // 0000000021AC: 7E020F01 
	v_rcp_iflag_f32_e32 v2, v2                                 // 0000000021B0: 7E044702 
	s_not_b32 s25, s17                                         // 0000000021B4: BE990411 
	v_mul_lo_u32 v3, v1, s7                                    // 0000000021B8: D2850003 00000F01 
	v_mul_f32_e32 v2, s0, v2                                   // 0000000021C0: 0A040400 
	v_mul_hi_u32 v4, v1, s7                                    // 0000000021C4: D2860004 00000F01 
	v_cvt_u32_f32_e32 v6, v2                                   // 0000000021CC: 7E0C0F02 
	v_sub_u32_e32 v5, vcc, 0, v3                               // 0000000021D0: 340A0680 
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 0000000021D4: D0CA0000 00020880 
	v_cndmask_b32_e64 v2, v3, v5, s[0:1]                       // 0000000021DC: D1000002 00020B03 
	v_mul_hi_u32 v3, v6, s14                                   // 0000000021E4: D2860003 00001D06 
	v_mul_lo_u32 v4, v6, s14                                   // 0000000021EC: D2850004 00001D06 
	v_mul_hi_u32 v2, v2, v1                                    // 0000000021F4: D2860002 00020302 
	v_cmp_eq_u32_e64 s[2:3], 0, v3                             // 0000000021FC: D0CA0002 00020680 
	v_sub_u32_e32 v7, vcc, 0, v4                               // 000000002204: 340E0880 
	v_cndmask_b32_e64 v3, v4, v7, s[2:3]                       // 000000002208: D1000003 000A0F04 
	v_mul_hi_u32 v3, v3, v6                                    // 000000002210: D2860003 00020D03 
	v_add_u32_e32 v5, vcc, v2, v1                              // 000000002218: 320A0302 
	v_subrev_u32_e32 v1, vcc, v2, v1                           // 00000000221C: 36020302 
	v_cndmask_b32_e64 v2, v1, v5, s[0:1]                       // 000000002220: D1000002 00020B01 
	v_add_u32_e32 v1, vcc, v3, v6                              // 000000002228: 32020D03 
	v_subrev_u32_e32 v3, vcc, v3, v6                           // 00000000222C: 36060D03 
	v_mov_b32_e32 v4, s28                                      // 000000002230: 7E08021C 
	v_cndmask_b32_e64 v3, v3, v1, s[2:3]                       // 000000002234: D1000003 000A0303 
	v_mov_b32_e32 v5, s29                                      // 00000000223C: 7E0A021D 

0000000000002240 BB0_2:
	v_ashrrev_i32_e32 v1, 31, v0                               // 000000002240: 2202009F 
	v_add_u32_e32 v6, vcc, v0, v1                              // 000000002244: 320C0300 
	v_xor_b32_e32 v6, v6, v1                                   // 000000002248: 2A0C0306 
	v_mul_hi_u32 v7, v2, v6                                    // 00000000224C: D2860007 00020D02 
	v_xor_b32_e32 v1, s6, v1                                   // 000000002254: 2A020206 
	v_mul_lo_u32 v8, v7, s7                                    // 000000002258: D2850008 00000F07 
	v_add_u32_e32 v9, vcc, -1, v7                              // 000000002260: 32120EC1 
	v_sub_u32_e32 v10, vcc, v6, v8                             // 000000002264: 34141106 
	v_cmp_ge_u32_e64 s[0:1], v6, v8                            // 000000002268: D0CE0000 00021106 
	v_cmp_le_u32_e64 s[2:3], s7, v10                           // 000000002270: D0CB0002 00021407 
	v_add_u32_e32 v6, vcc, 1, v7                               // 000000002278: 320C0E81 
	s_and_b64 vcc, s[2:3], s[0:1]                              // 00000000227C: 86EA0002 
	v_cndmask_b32_e32 v6, v7, v6, vcc                          // 000000002280: 000C0D07 
	v_cndmask_b32_e64 v6, v9, v6, s[0:1]                       // 000000002284: D1000006 00020D09 
	v_xor_b32_e32 v6, v6, v1                                   // 00000000228C: 2A0C0306 
	v_sub_u32_e32 v8, vcc, v6, v1                              // 000000002290: 34100306 
	v_ashrrev_i32_e32 v1, 31, v8                               // 000000002294: 2202109F 
	v_add_u32_e32 v6, vcc, v8, v1                              // 000000002298: 320C0308 
	v_xor_b32_e32 v6, v6, v1                                   // 00000000229C: 2A0C0306 
	v_mul_hi_u32 v7, v3, v6                                    // 0000000022A0: D2860007 00020D03 
	v_xor_b32_e32 v1, s8, v1                                   // 0000000022A8: 2A020208 
	v_mul_lo_u32 v9, v7, s14                                   // 0000000022AC: D2850009 00001D07 
	v_sub_u32_e32 v10, vcc, v6, v9                             // 0000000022B4: 34141306 
	v_cmp_le_u32_e64 s[0:1], s14, v10                          // 0000000022B8: D0CB0000 0002140E 
	v_cmp_ge_u32_e64 s[2:3], v6, v9                            // 0000000022C0: D0CE0002 00021306 
	v_add_u32_e32 v10, vcc, -1, v7                             // 0000000022C8: 32140EC1 
	v_add_u32_e32 v6, vcc, 1, v7                               // 0000000022CC: 320C0E81 
	s_and_b64 vcc, s[0:1], s[2:3]                              // 0000000022D0: 86EA0200 
	v_cndmask_b32_e32 v6, v7, v6, vcc                          // 0000000022D4: 000C0D07 
	v_cndmask_b32_e64 v6, v10, v6, s[2:3]                      // 0000000022D8: D1000006 000A0D0A 
	v_xor_b32_e32 v6, v6, v1                                   // 0000000022E0: 2A0C0306 
	v_sub_u32_e32 v1, vcc, v6, v1                              // 0000000022E4: 34020306 
	v_mul_lo_u32 v6, v1, s18                                   // 0000000022E8: D2850006 00002501 
	v_mul_lo_u32 v9, s15, v1                                   // 0000000022F0: D2850009 0002020F 
	v_mov_b32_e32 v7, 0xff7fffff                               // 0000000022F8: 7E0E02FF FF7FFFFF 
	v_sub_u32_e32 v6, vcc, v8, v6                              // 000000002300: 340C0D08 
	v_mul_lo_u32 v6, v6, s22                                   // 000000002304: D2850006 00002D06 
	v_ashrrev_i32_e32 v10, 31, v9                              // 00000000230C: 2214129F 
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000002310: D28F0009 00021282 
	v_subrev_u32_e32 v6, vcc, s10, v6                          // 000000002318: 360C0C0A 
	v_add_u32_e32 v1, vcc, s20, v6                             // 00000000231C: 32020C14 
	v_add_u32_e32 v4, vcc, v4, v9                              // 000000002320: 32081304 
	v_min_i32_e32 v1, s16, v1                                  // 000000002324: 18020210 
	v_max_i32_e32 v6, 0, v6                                    // 000000002328: 1A0C0C80 
	v_addc_u32_e32 v5, vcc, v5, v10, vcc                       // 00000000232C: 380A1505 
	v_cmp_lt_i32_e32 vcc, v6, v1                               // 000000002330: 7D820306 
	s_and_saveexec_b64 s[2:3], vcc                             // 000000002334: BE82206A 
	s_cbranch_execz BB0_10                                     // 000000002338: BF880035 

000000000000233c BB0_3:
	v_mul_lo_u32 v7, v8, s19                                   // 00000000233C: D2850007 00002708 
	v_mul_lo_u32 v8, s17, v6                                   // 000000002344: D2850008 00020C11 
	s_mov_b64 s[28:29], 0                                      // 00000000234C: BE9C0180 
	v_sub_u32_e32 v7, vcc, v0, v7                              // 000000002350: 340E0F00 
	v_mul_lo_u32 v7, v7, s23                                   // 000000002354: D2850007 00002F07 
	v_subrev_u32_e32 v9, vcc, s11, v7                          // 00000000235C: 36120E0B 
	v_add_u32_e32 v10, vcc, s21, v9                            // 000000002360: 32141215 
	v_max_i32_e32 v9, 0, v9                                    // 000000002364: 1A121280 
	v_min_i32_e32 v10, s17, v10                                // 000000002368: 18141411 
	v_cmp_lt_i32_e64 s[0:1], v9, v10                           // 00000000236C: D0C10000 00021509 
	v_add_u32_e32 v9, vcc, s5, v7                              // 000000002374: 32120E05 
	v_sub_u32_e32 v7, vcc, s24, v7                             // 000000002378: 340E0E18 
	v_max_i32_e32 v7, s25, v7                                  // 00000000237C: 1A0E0E19 
	v_max_i32_e32 v9, 0, v9                                    // 000000002380: 1A121280 
	v_not_b32_e32 v7, v7                                       // 000000002384: 7E0E5707 
	v_sub_u32_e32 v10, vcc, v7, v9                             // 000000002388: 34141307 
	v_add_u32_e32 v8, vcc, v9, v8                              // 00000000238C: 32101109 
	v_mov_b32_e32 v7, 0xff7fffff                               // 000000002390: 7E0E02FF FF7FFFFF 

0000000000002398 BB0_4:
	s_and_saveexec_b64 s[30:31], s[0:1]                        // 000000002398: BE9E2000 
	s_cbranch_execz BB0_8                                      // 00000000239C: BF880014 

00000000000023a0 BB0_5:
	v_ashrrev_i32_e32 v9, 31, v8                               // 0000000023A0: 2212109F 
	v_lshlrev_b64 v[11:12], 2, v[8:9]                          // 0000000023A4: D28F000B 00021082 
	s_mov_b64 s[32:33], 0                                      // 0000000023AC: BEA00180 
	v_add_u32_e32 v11, vcc, v4, v11                            // 0000000023B0: 32161704 
	v_addc_u32_e32 v12, vcc, v5, v12, vcc                      // 0000000023B4: 38181905 
	v_mov_b32_e32 v9, v10                                      // 0000000023B8: 7E12030A 

00000000000023bc BB0_6:
	flat_load_dword v13, v[11:12]                              // 0000000023BC: DC500000 0D00000B 
	v_add_u32_e32 v9, vcc, -1, v9                              // 0000000023C4: 321212C1 
	v_add_u32_e32 v11, vcc, 4, v11                             // 0000000023C8: 32161684 
	v_addc_u32_e32 v12, vcc, 0, v12, vcc                       // 0000000023CC: 38181880 
	v_cmp_eq_u32_e32 vcc, 0, v9                                // 0000000023D0: 7D941280 
	s_or_b64 s[32:33], vcc, s[32:33]                           // 0000000023D4: 87A0206A 
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000023D8: BF8C0070 
	v_cmp_gt_f32_e32 vcc, v13, v7                              // 0000000023DC: 7C880F0D 
	v_cndmask_b32_e32 v7, v7, v13, vcc                         // 0000000023E0: 000E1B07 
	s_andn2_b64 exec, exec, s[32:33]                           // 0000000023E4: 89FE207E 
	s_cbranch_execnz BB0_6                                     // 0000000023E8: BF89FFF4 
	s_or_b64 exec, exec, s[32:33]                              // 0000000023EC: 87FE207E 

00000000000023f0 BB0_8:
	s_or_b64 exec, exec, s[30:31]                              // 0000000023F0: 87FE1E7E 
	v_add_u32_e32 v6, vcc, 1, v6                               // 0000000023F4: 320C0C81 
	v_cmp_eq_u32_e32 vcc, v6, v1                               // 0000000023F8: 7D940306 
	s_or_b64 s[28:29], vcc, s[28:29]                           // 0000000023FC: 879C1C6A 
	v_add_u32_e32 v8, vcc, s17, v8                             // 000000002400: 32101011 
	s_andn2_b64 exec, exec, s[28:29]                           // 000000002404: 89FE1C7E 
	s_cbranch_execnz BB0_4                                     // 000000002408: BF89FFE3 
	s_or_b64 exec, exec, s[28:29]                              // 00000000240C: 87FE1C7E 

0000000000002410 BB0_10:
	s_or_b64 exec, exec, s[2:3]                                // 000000002410: 87FE027E 
	v_ashrrev_i32_e32 v1, 31, v0                               // 000000002414: 2202009F 
	v_lshlrev_b64 v[8:9], 2, v[0:1]                            // 000000002418: D28F0008 00020082 
	v_mov_b32_e32 v1, s13                                      // 000000002420: 7E02020D 
	v_add_u32_e32 v8, vcc, s12, v8                             // 000000002424: 3210100C 
	v_addc_u32_e32 v9, vcc, v1, v9, vcc                        // 000000002428: 38121301 
	v_add_u32_e32 v0, vcc, s4, v0                              // 00000000242C: 32000004 
	v_cmp_le_i32_e32 vcc, s9, v0                               // 000000002430: 7D860009 
	s_or_b64 s[26:27], vcc, s[26:27]                           // 000000002434: 879A1A6A 
	flat_store_dword v[8:9], v7                                // 000000002438: DC700000 00000708 
	s_andn2_b64 exec, exec, s[26:27]                           // 000000002440: 89FE1A7E 
	s_cbranch_execnz BB0_2                                     // 000000002444: BF89FF7E 

0000000000002448 BB0_11:
	s_endpgm                                                   // 000000002448: BF810000 
